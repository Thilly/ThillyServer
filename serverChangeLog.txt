ChangeLog - Thilly.net V5 - Web Service

16 June 2014
Lets keep a back button and static linking

	webService.js
		modified page querying to get specific and a range
	
	mongo.js
		modified page querying to get specific and a range


15 June 2014 - mongo is weird and I had no clear plan

after writing one REALLY general avenue, I realized it was opening me up to people just writing their own queries in the JS console...
have to re-write my mongo

	webService.js:
		changed the behavior of how the server works with mongo a little bit in preparation for completely re-writing my mongo
		
	mongo.js:
		realized I had painted myself into a huge security corner, now I have to re-write it
		made a better pseudo idea at the bottom so hopefully I remember my notes and can understand them when I get back to it


14 June 2014 - first query worked

I pushed the two articles I created so far, FAQ and DependencyInjection into mongo just to see if I can query them back out. 
I can and did, it's wonderful to see the pieces fall into place.

	webService.js:
		refactoring the function map for the mongo hooks, will move to their own file/map
		finished writing the general mongo functions, not finished but good enough to move on


13 June 2014 - Implementing mongoDB

Started creating a library that will work as the storage for my CMS, so far pretty nice

	webService.js:
		made the server start up the mongo connection
		added hooks from the actionCommand for mongo interactions
			still need to streamline it, feels really redundant at the moment
		
	
	thillyFiles.js:
		renamed the 'dir' directory to client, so changes were made in the file handler
	
	thillyLogging.js:
		added a flag for mongo, 'logging.mongo'
	
	thillyMongo.js:
		implemented mongoDB connections to thillyNet database
			collections for content, comments, and users
		implemented new module with public functions:
			'getUserVotes','getUserComments','getPageComments','getUser','getPages'		
			'addUser','addComment','addArticle'	
		implemented various private functions as well:
			dateTimeStamp, getComments, DBException, isLogging


8 June 2014 - Start logging development to not loose track of progress

Began trying to make an extensible web service to act as a webServer, fileHandler, and CMS

	webService.js:
		-implemented node(http) to listen for web requests using thillyFiles.fileHandler to serve
		-implemented socket.io to create two way communication (no ajax/PhP)
		-implemented some basic functions I find myself writing again and again
			actionCommand, sendCommand
			
	thillyExceptions.js:
		-implemented basic error handling (place holder ATM)
		
	thillyFiles.js:
		-implemented wrappers with logging around node(fs) library
		-implemented filehandler for most common requests, can be extended for more file types
		
	thillyLogging.js:
		-implemented basic logging object to easily watch certain aspects of the process
		-implemented ability to log out to a file to see what or if anything happened while not watching server
		
	Other:
		Created service to start automatically when server is powered on.